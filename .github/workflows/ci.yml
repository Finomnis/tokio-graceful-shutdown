
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]

name: CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install cross
        uses: taiki-e/install-action@cross

      - name: Build
        run: cross build --release --target=${{ matrix.target }}

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      #- uses: Swatinem/rust-cache@v1

      - name: Run cargo test
        run: cargo test -- --test-threads 1

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy --all-features -- -D warnings

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo doc
        env:
          RUSTDOCFLAGS: "-Dwarnings"
        run: cargo doc --no-deps

  leaks:
    name: Memory leaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install llvm
        # Required to resolve symbols in sanitizer output
        run: sudo apt-get install -y llvm

      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      #- uses: Swatinem/rust-cache@v1

      - name: Build
        env:
          RUSTFLAGS: "-Z sanitizer=address"
        run: cargo build --target x86_64-unknown-linux-gnu --tests

      - name: Run tests with leak sanitizer
        env:
          RUSTFLAGS: "-Z sanitizer=address"
        run:
          cargo test
          --target x86_64-unknown-linux-gnu --tests
          -- --test-threads 1

  release:
    name: Publish version
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'release'
    needs: [build, test, lints, docs, leaks]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Query crate version
        run: echo "crate_version=$(cargo metadata --format-version=1 --no-deps | python -c "import sys,json; print('v' + json.load(sys.stdin)['packages'][0]['version'])")" >> $GITHUB_ENV

      - name: Query release tag version
        run: echo "release_tag_version=${{ github.event.release.name }}" >> $GITHUB_ENV

      - name: Print versions
        run: echo "Crate - ${{ env.crate_version }}, Release - ${{ env.release_tag_version }}"

      - name: Check version not empty
        run: test -n ${{ env.crate_version }}

      - name: Check matching versions
        run: test ${{ env.crate_version }} = ${{ env.release_tag_version }}

      - name: Cargo login
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}

      - name: Cargo publish
        run: cargo publish
